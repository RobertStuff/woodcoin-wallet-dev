<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 25.1.7">

    <issue
        id="CommitTransaction"
        severity="Warning"
        message="This transaction should be completed with a `commit()` call"
        category="Correctness"
        priority="7"
        summary="Missing `commit()` calls"
        explanation="After creating a `FragmentTransaction`, you typically need to commit it as well"
        errorLine1="    currentTransaction = fragmentManager.beginTransaction();"
        errorLine2="                                         ~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/AddressBookActivity.java"
            line="175"
            column="42"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 16 (current min is 15): `android.appwidget.AppWidgetManager#OPTION_APPWIDGET_MIN_WIDTH`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.

If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.
If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.
"
        errorLine1="   log.info(&quot;app widget {} options changed: minWidth={}&quot;, appWidgetId, newOptions.getInt(AppWidgetManager.OPTION_APPWIDGET_MIN_WIDTH));"
        errorLine2="                                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/WalletBalanceWidgetProvider.java"
            line="73"
            column="90"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 16 (current min is 15): `android.appwidget.AppWidgetManager#OPTION_APPWIDGET_MIN_WIDTH`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.

If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.
If your code is *deliberately* accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.
"
        errorLine1="   final int minWidth = appWidgetOptions.getInt(AppWidgetManager.OPTION_APPWIDGET_MIN_WIDTH);"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/WalletBalanceWidgetProvider.java"
            line="164"
            column="49"/>
    </issue>

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: `javax.mail.internet`. Referenced from `ch.qos.logback.core.net.SMTPAppenderBase`."
        category="Correctness"
        priority="6"
        summary="Package not included in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/home/lukas/.gradle/caches/modules-2/files-2.1/com.github.tony19/logback-android-core/1.1.1-4/cd422166cca6c3d930309a6685ea3f40c91942ce/logback-android-core-1.1.1-4.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: `javax.mail`. Referenced from `ch.qos.logback.core.net.LoginAuthenticator`."
        category="Correctness"
        priority="6"
        summary="Package not included in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/home/lukas/.gradle/caches/modules-2/files-2.1/com.github.tony19/logback-android-core/1.1.1-4/cd422166cca6c3d930309a6685ea3f40c91942ce/logback-android-core-1.1.1-4.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: `java.nio.file`. Referenced from `okio.Okio`."
        category="Correctness"
        priority="6"
        summary="Package not included in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/home/lukas/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.6.0/98476622f10715998eacf9240d6b479f12c66143/okio-1.6.0.jar"/>
    </issue>

    <issue
        id="LocaleFolder"
        severity="Warning"
        message="The locale folder &quot;`he`&quot; should be called &quot;`iw`&quot; instead; see the `java.util.Locale` documentation"
        category="Correctness"
        priority="6"
        summary="Wrong locale name"
        explanation="From the `java.util.Locale` documentation:
&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;) language code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish (&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.

Because of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.

To work around this, place your resources in a `values` folder using the deprecated language code instead."
        url="http://developer.android.com/reference/java/util/Locale.html"
        urls="http://developer.android.com/reference/java/util/Locale.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he"/>
    </issue>

    <issue
        id="LocaleFolder"
        severity="Warning"
        message="The locale folder &quot;`id`&quot; should be called &quot;`in`&quot; instead; see the `java.util.Locale` documentation"
        category="Correctness"
        priority="6"
        summary="Wrong locale name"
        explanation="From the `java.util.Locale` documentation:
&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;) language code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish (&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.

Because of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.

To work around this, place your resources in a `values` folder using the deprecated language code instead."
        url="http://developer.android.com/reference/java/util/Locale.html"
        urls="http://developer.android.com/reference/java/util/Locale.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = LayoutInflater.from(activity).inflate(R.layout.backup_wallet_dialog, null);"
        errorLine2="                                                                                         ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/BackupWalletDialogFragment.java"
            line="128"
            column="90"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="      view = inflater.inflate(R.layout.block_row_transaction, null);"
        errorLine2="                                                              ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/BlockListAdapter.java"
            line="176"
            column="63"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  this.customTitle = LayoutInflater.from(context).inflate(R.layout.dialog_title, null);"
        errorLine2="                                                                                 ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/DialogBuilder.java"
            line="55"
            column="82"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = inflater.inflate(R.layout.edit_address_book_entry_dialog, null);"
        errorLine2="                                                                              ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/EditAddressBookEntryFragment.java"
            line="120"
            column="79"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = LayoutInflater.from(activity).inflate(R.layout.encrypt_keys_dialog, null);"
        errorLine2="                                                                                        ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/EncryptKeysDialogFragment.java"
            line="146"
            column="89"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = LayoutInflater.from(activity).inflate(R.layout.extended_public_key_dialog, null);"
        errorLine2="                                                                                               ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/preference/ExtendedPublicKeyFragment.java"
            line="82"
            column="96"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="   row = inflater.inflate(R.layout.spinner_item, null);"
        errorLine2="                                                 ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/FileAdapter.java"
            line="60"
            column="50"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = LayoutInflater.from(activity).inflate(R.layout.maintenance_dialog, null);"
        errorLine2="                                                                                       ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/send/MaintenanceDialogFragment.java"
            line="130"
            column="88"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = LayoutInflater.from(activity).inflate(R.layout.raise_fee_dialog, null);"
        errorLine2="                                                                                     ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/send/RaiseFeeDialogFragment.java"
            line="145"
            column="86"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = inflater.inflate(R.layout.report_issue_dialog, null);"
        errorLine2="                                                                   ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/ReportIssueDialogBuilder.java"
            line="77"
            column="68"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = getLayoutInflater().inflate(R.layout.restore_wallet_from_external_dialog, null);"
        errorLine2="                                                                                              ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/RestoreWalletActivity.java"
            line="99"
            column="95"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="  final View view = getLayoutInflater().inflate(R.layout.restore_wallet_dialog, null);"
        errorLine2="                                                                                ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="360"
            column="81"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="     row = inflater.inflate(R.layout.restore_wallet_file_row, null);"
        errorLine2="                                                              ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="412"
            column="63"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="   row = inflater.inflate(R.layout.address_book_row, null);"
        errorLine2="                                                     ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletAddressesAdapter.java"
            line="151"
            column="54"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:support-annotations than 23.1.1 is available: 24.1.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.android.support:support-annotations:23.1.1&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/build.gradle"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:support-v4 than 23.1.1 is available: 24.1.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.android.support:support-v4:23.1.1&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/build.gradle"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:support-v13 than 23.1.1 is available: 24.1.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.android.support:support-v13:23.1.1&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/build.gradle"
            line="10"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:recyclerview-v7 than 23.1.1 is available: 24.1.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.android.support:recyclerview-v7:23.1.1&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/build.gradle"
            line="11"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:cardview-v7 than 23.1.1 is available: 24.1.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.android.support:cardview-v7:23.1.1&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/build.gradle"
            line="12"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.guava:guava than 16.0.1 is available: 18.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.google.guava:guava:16.0.1&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/build.gradle"
            line="15"
            column="5"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`about_credits_bitcoinj_title`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="  findPreference(KEY_ABOUT_CREDITS_BITCOINJ).setTitle(getString(R.string.about_credits_bitcoinj_title, VersionMessage.BITCOINJ_VERSION));"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/preference/AboutFragment.java"
            line="67"
            column="55"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="273"
            column="3"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`export_keys_dialog_failure`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="   dialog.setMessage(getString(R.string.export_keys_dialog_failure, x.getMessage()));"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/BackupWalletDialogFragment.java"
            line="285"
            column="22"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="176"
            column="3"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`import_keys_dialog_failure`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="   dialog.setMessage(getString(R.string.import_keys_dialog_failure, x.getMessage()));"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/RestoreWalletActivity.java"
            line="191"
            column="22"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="124"
            column="2"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`import_keys_dialog_message`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="  messageView.setText(getString(R.string.import_keys_dialog_message, path));"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="441"
            column="23"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="151"
            column="3"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`import_keys_dialog_failure`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="   dialog.setMessage(getString(R.string.import_keys_dialog_failure, x.getMessage()));"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="746"
            column="22"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="124"
            column="2"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`import_keys_dialog_failure`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="   dialog.setMessage(getString(R.string.import_keys_dialog_failure, x.getMessage()));"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="775"
            column="22"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="124"
            column="2"/>
    </issue>

    <issue
        id="StringFormatInvalid"
        severity="Error"
        message="Format string &apos;`import_keys_dialog_failure`&apos; is not a valid format string so it should not be passed to `String.format`"
        category="Correctness:Messages"
        priority="9"
        summary="Invalid format string"
        explanation="If a string contains a &apos;%&apos; character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each &apos;%&apos; occurrence with specific values.

This lint warning checks for two related problems:
(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.
(2) Strings containing &apos;%&apos; that are not formatting strings getting passed to a `String.format` call. In this case the &apos;%&apos; will need to be escaped as &apos;%%&apos;.

NOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case."
        errorLine1="   dialog.setMessage(getString(R.string.import_keys_dialog_failure, x.getMessage()));"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="818"
            column="22"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="124"
            column="2"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;tí&quot; is a common misspelling; did you mean &quot;ti&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;send_coins_fragment_receiving_address_own&quot;>¡Estás a punto de enviartelo a tí mismo!&lt;/string>"
        errorLine2="                                                                                          ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="65"
            column="91"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;Kağıt&quot; is a common misspelling; did you mean &quot;Kâğıt&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;sweep_wallet_activity_title&quot;>Kağıt cüzdanı tara&lt;/string>"
        errorLine2="                                             ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="100"
            column="46"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;kağıt&quot; is a common misspelling; did you mean &quot;kâğıt&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_intro&quot;>Bir kupon ya da kağıt cüzdan taramak üzeresiniz. Bunu yapmanız bu kağıttaki tüm bitcoinleri cihazınızdaki cüzdana taşıyacaktır. Muamele teyit edildiğinde kağıdın hiçbir değeri kalmayacaktır ve güvenlik nedenleriyle tekrar kullanılmamalıdır.&lt;/string>"
        errorLine2="                                                             ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="101"
            column="62"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;Kağıt&quot; is a common misspelling; did you mean &quot;Kâğıt&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_hint&quot;>Kağıt cüzdanlar en sık soğuk depolama için kullanılır. Bazı bankamatikler doğrudan mobil cihazınıza bitcoin yollamaktan ziyade bunu kağıt çıktısına yazarlar. Bazı kişiler de bazen ön yüklü kağıt cüzdanları para değeri aktarmak için kullanırlar (tavsiye edilmez).&lt;/string>"
        errorLine2="                                            ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="102"
            column="45"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;kağıt&quot; is a common misspelling; did you mean &quot;kâğıt&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_hint&quot;>Kağıt cüzdanlar en sık soğuk depolama için kullanılır. Bazı bankamatikler doğrudan mobil cihazınıza bitcoin yollamaktan ziyade bunu kağıt çıktısına yazarlar. Bazı kişiler de bazen ön yüklü kağıt cüzdanları para değeri aktarmak için kullanırlar (tavsiye edilmez).&lt;/string>"
        errorLine2="                                                                                                                                                                                ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="102"
            column="177"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;Kağıt&quot; is a common misspelling; did you mean &quot;Kâğıt&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Spelling error"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_wallet_unknown&quot;>Kağıt cüzdanın özel anahtarını tarayarak başlayın. Kameranın etkinleştirme düğmesini kullanın.&lt;/string>"
        errorLine2="                                                      ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="103"
            column="55"/>
    </issue>

    <issue
        id="PluralsCandidate"
        severity="Warning"
        message="Formatting %d followed by words (&quot;hours&quot;): This should probably be a plural rather than a string"
        category="Correctness:Messages"
        priority="5"
        summary="Potential Plurals"
        explanation="This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.

For example, rather than something like this:
  &lt;string name=&quot;try_again&quot;>Try again in %d seconds.&lt;/string>
you should be using a plural:
   &lt;plurals name=&quot;try_again&quot;>
        &lt;item quantity=&quot;one&quot;>Try again in %d second&lt;/item>
        &lt;item quantity=&quot;other&quot;>Try again in %d seconds&lt;/item>
    &lt;/plurals>
This will ensure that in other languages the right set of translations are provided for the different quantity classes.

(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives."
        url="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1=" &lt;string name=&quot;blockchain_state_progress_hours&quot;>%1$s, %2$d hours behind&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="7"
            column="2"/>
    </issue>

    <issue
        id="PluralsCandidate"
        severity="Warning"
        message="Formatting %d followed by words (&quot;days&quot;): This should probably be a plural rather than a string"
        category="Correctness:Messages"
        priority="5"
        summary="Potential Plurals"
        explanation="This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.

For example, rather than something like this:
  &lt;string name=&quot;try_again&quot;>Try again in %d seconds.&lt;/string>
you should be using a plural:
   &lt;plurals name=&quot;try_again&quot;>
        &lt;item quantity=&quot;one&quot;>Try again in %d second&lt;/item>
        &lt;item quantity=&quot;other&quot;>Try again in %d seconds&lt;/item>
    &lt;/plurals>
This will ensure that in other languages the right set of translations are provided for the different quantity classes.

(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives."
        url="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1=" &lt;string name=&quot;blockchain_state_progress_days&quot;>%1$s, %2$d days behind&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="8"
            column="2"/>
    </issue>

    <issue
        id="PluralsCandidate"
        severity="Warning"
        message="Formatting %d followed by words (&quot;weeks&quot;): This should probably be a plural rather than a string"
        category="Correctness:Messages"
        priority="5"
        summary="Potential Plurals"
        explanation="This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.

For example, rather than something like this:
  &lt;string name=&quot;try_again&quot;>Try again in %d seconds.&lt;/string>
you should be using a plural:
   &lt;plurals name=&quot;try_again&quot;>
        &lt;item quantity=&quot;one&quot;>Try again in %d second&lt;/item>
        &lt;item quantity=&quot;other&quot;>Try again in %d seconds&lt;/item>
    &lt;/plurals>
This will ensure that in other languages the right set of translations are provided for the different quantity classes.

(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives."
        url="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1=" &lt;string name=&quot;blockchain_state_progress_weeks&quot;>%1$s, %2$d weeks behind&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="9"
            column="2"/>
    </issue>

    <issue
        id="PluralsCandidate"
        severity="Warning"
        message="Formatting %d followed by words (&quot;months&quot;): This should probably be a plural rather than a string"
        category="Correctness:Messages"
        priority="5"
        summary="Potential Plurals"
        explanation="This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.

For example, rather than something like this:
  &lt;string name=&quot;try_again&quot;>Try again in %d seconds.&lt;/string>
you should be using a plural:
   &lt;plurals name=&quot;try_again&quot;>
        &lt;item quantity=&quot;one&quot;>Try again in %d second&lt;/item>
        &lt;item quantity=&quot;other&quot;>Try again in %d seconds&lt;/item>
    &lt;/plurals>
This will ensure that in other languages the right set of translations are provided for the different quantity classes.

(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives."
        url="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1=" &lt;string name=&quot;blockchain_state_progress_months&quot;>%1$s, %2$d months behind&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="10"
            column="2"/>
    </issue>

    <issue
        id="PluralsCandidate"
        severity="Warning"
        message="Formatting %d followed by words (&quot;minutes&quot;): This should probably be a plural rather than a string"
        category="Correctness:Messages"
        priority="5"
        summary="Potential Plurals"
        explanation="This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.

For example, rather than something like this:
  &lt;string name=&quot;try_again&quot;>Try again in %d seconds.&lt;/string>
you should be using a plural:
   &lt;plurals name=&quot;try_again&quot;>
        &lt;item quantity=&quot;one&quot;>Try again in %d second&lt;/item>
        &lt;item quantity=&quot;other&quot;>Try again in %d seconds&lt;/item>
    &lt;/plurals>
This will ensure that in other languages the right set of translations are provided for the different quantity classes.

(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives."
        url="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1=" &lt;string name=&quot;wallet_timeskew_dialog_msg&quot;>Your device time is off by %d minutes. You probably cannot send or receive Bitcoins due to this problem.\n\nYou should check and if necessary correct your date, time and timezone settings.&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="49"
            column="2"/>
    </issue>

    <issue
        id="PluralsCandidate"
        severity="Warning"
        message="Formatting %d followed by words (&quot;peers&quot;): This should probably be a plural rather than a string"
        category="Correctness:Messages"
        priority="5"
        summary="Potential Plurals"
        explanation="This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.

For example, rather than something like this:
  &lt;string name=&quot;try_again&quot;>Try again in %d seconds.&lt;/string>
you should be using a plural:
   &lt;plurals name=&quot;try_again&quot;>
        &lt;item quantity=&quot;one&quot;>Try again in %d second&lt;/item>
        &lt;item quantity=&quot;other&quot;>Try again in %d seconds&lt;/item>
    &lt;/plurals>
This will ensure that in other languages the right set of translations are provided for the different quantity classes.

(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives."
        url="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="http://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1=" &lt;string name=&quot;notification_peers_connected_msg&quot;>%d peers connected&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="287"
            column="2"/>
    </issue>

    <issue
        id="StringFormatCount"
        severity="Warning"
        message="Inconsistent number of arguments in formatting string `import_keys_dialog_message`; found both 0 and 1"
        category="Correctness:Messages"
        priority="5"
        summary="Formatting argument types incomplete or inconsistent"
        explanation="When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.

There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly."
        errorLine1=" &lt;string name=&quot;import_keys_dialog_message&quot;>Pick a wallet backup file from external storage (%s):&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="172"
            column="2"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="151"
            column="3"/>
    </issue>

    <issue
        id="StringFormatCount"
        severity="Warning"
        message="Inconsistent number of arguments in formatting string `import_keys_dialog_failure`; found both 0 and 1"
        category="Correctness:Messages"
        priority="5"
        summary="Formatting argument types incomplete or inconsistent"
        explanation="When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.

There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly."
        errorLine1=" &lt;string name=&quot;import_keys_dialog_failure&quot;>Wallet could not be restored:\n\n%s\n\nBad password?&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="184"
            column="2"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="124"
            column="2"/>
    </issue>

    <issue
        id="StringFormatCount"
        severity="Warning"
        message="Inconsistent number of arguments in formatting string `export_keys_dialog_failure`; found both 0 and 1"
        category="Correctness:Messages"
        priority="5"
        summary="Formatting argument types incomplete or inconsistent"
        explanation="When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.

There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly."
        errorLine1=" &lt;string name=&quot;export_keys_dialog_failure&quot;>Your wallet could not be backed up:\n%s&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="190"
            column="2"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="176"
            column="3"/>
    </issue>

    <issue
        id="StringFormatCount"
        severity="Warning"
        message="Inconsistent number of arguments in formatting string `input_parser_unverifyable_paymentrequest`; found both 0 and 1"
        category="Correctness:Messages"
        priority="5"
        summary="Formatting argument types incomplete or inconsistent"
        explanation="When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.

There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly."
        errorLine1=" &lt;string name=&quot;input_parser_unverifyable_paymentrequest&quot;>Cannot verify payment request:\n%s&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="220"
            column="2"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="218"
            column="3"/>
    </issue>

    <issue
        id="StringFormatCount"
        severity="Warning"
        message="Inconsistent number of arguments in formatting string `about_credits_bitcoinj_title`; found both 0 and 1"
        category="Correctness:Messages"
        priority="5"
        summary="Formatting argument types incomplete or inconsistent"
        explanation="When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.

There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly."
        errorLine1=" &lt;string name=&quot;about_credits_bitcoinj_title&quot;>This app is using bitcoinj %s&lt;/string>"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="279"
            column="2"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="273"
            column="3"/>
    </issue>

    <issue
        id="TrulyRandom"
        severity="Warning"
        message="Potentially insecure random numbers on Android 4.3 and older. Read https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html for more info."
        category="Security"
        priority="9"
        summary="Weak RNG"
        explanation="Key generation, signing, encryption, and random number generation may not receive cryptographically strong values due to improper initialization of the underlying PRNG on Android 4.3 and below.

If your application relies on cryptographically secure random number generation you should apply the workaround described in https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html .

This lint rule is mostly informational; it does not accurately detect whether cryptographically secure RNG is required, or whether the workaround has already been applied. After reading the blog entry and updating your code if necessary, you can disable this lint issue."
        url="https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html"
        urls="https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html"
        errorLine1="    new SecureRandom().nextBytes(salt);"
        errorLine2="        ~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/EncryptKeysDialogFragment.java"
            line="251"
            column="9"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/com/subgraph/orchid/connections/ConnectionSocketFactory$1.class"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkServerTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/com/subgraph/orchid/connections/ConnectionSocketFactory$1.class"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/com/netki/tlsa/TLSAValidator$1.class"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkServerTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/com/netki/tlsa/TLSAValidator$1.class"/>
    </issue>

    <issue
        id="WorldReadableFiles"
        severity="Warning"
        message="Using `MODE_WORLD_READABLE` when creating files can be risky, review carefully"
        category="Security"
        priority="4"
        summary="`openFileOutput()` or similar call passing `MODE_WORLD_READABLE`"
        explanation="There are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications."
        errorLine1="  final File logDir = getDir(&quot;log&quot;, Constants.TEST ? Context.MODE_WORLD_READABLE : MODE_PRIVATE);"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/WalletApplication.java"
            line="160"
            column="62"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).

If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.

There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="  &lt;LinearLayout"
        errorLine2="  ^"
        quickfix="adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="31"
            column="3"/>
    </issue>

    <issue
        id="MergeRootFrame"
        severity="Warning"
        message="This `&lt;FrameLayout>` can be replaced with a `&lt;merge>` tag"
        category="Performance"
        priority="4"
        summary="FrameLayout can be replaced with `&lt;merge>` tag"
        explanation="If a `&lt;FrameLayout>` is the root of a layout and does not provide background or padding etc, it can often be replaced with a `&lt;merge>` tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the `&lt;merge>` tag works before proceeding."
        url="http://android-developers.blogspot.com/2009/03/android-layout-tricks-3-optimize-by.html"
        urls="http://android-developers.blogspot.com/2009/03/android-layout-tricks-3-optimize-by.html"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1=" &lt;LinearLayout"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_onepane_horizontal.xml"
            line="7"
            column="2"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1=" &lt;LinearLayout"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_twopanes.xml"
            line="8"
            column="2"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/address_book_twopanes.xml"
            line="29"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/address_book_twopanes.xml"
            line="68"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/network_monitor_twopanes.xml"
            line="29"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/network_monitor_twopanes.xml"
            line="69"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="    android:layout_weight=&quot;1&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/request_coins_fragment.xml"
            line="43"
            column="5"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_onepane_horizontal.xml"
            line="25"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_onepane_vertical.xml"
            line="39"
            column="4"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a LinearLayout with non-zero weights is nested inside another LinearLayout with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="   android:layout_weight=&quot;1&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_twopanes.xml"
            line="29"
            column="4"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_list` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_list&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/address_book_row.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_list` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_list&quot; >"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_list` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_list&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row_transaction.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_dialog_title` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_dialog_title&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/dialog_title.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_list` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_list&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_less_bright` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_less_bright&quot; >"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/extended_public_key_dialog.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_form` with a theme that also paints a background (inferred theme is `@style/My_Theme_ChildActivity`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_form&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/request_coins_content.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_form` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_form&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/request_coins_form_include.xml"
            line="4"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_less_bright` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_less_bright&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/row_separator.xml"
            line="4"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_form` with a theme that also paints a background (inferred theme is `@style/My_Theme_ChildActivity`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_form&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/send_coins_content.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/bg_form` with a theme that also paints a background (inferred theme is `@style/My_Theme_ChildActivity`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@color/bg_form&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/sweep_wallet_content.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.block_explorer_content` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;fragment xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_explorer_content.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.button_bar_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/drawable/button_bar_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.font_size_xlarge` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;dimen name=&quot;font_size_xlarge&quot;>28sp&lt;/dimen>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/dimens.xml"
            line="8"
            column="9"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-large/dimens.xml"
            line="8"
            column="9"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-small/dimens.xml"
            line="8"
            column="9"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-xlarge/dimens.xml"
            line="8"
            column="9"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.peer_monitor_content` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;fragment xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/peer_monitor_content.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.send_coins_broadcast_1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/raw/send_coins_broadcast_1.wav"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.send_coins_broadcast_2` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/raw/send_coins_broadcast_2.wav"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.send_coins_broadcast_3` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/raw/send_coins_broadcast_3.wav"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.send_coins_broadcast_4` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/raw/send_coins_broadcast_4.wav"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.wallet_balance_fragment_replaying` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;wallet_balance_fragment_replaying&quot;>Balance is unavailable during replay.&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="18"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ar/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ca/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-cs/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-da/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-de/strings.xml"
            line="20"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-el/strings.xml"
            line="16"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-eo/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fi/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fr/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he/strings.xml"
            line="15"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hu/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ja/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-mk/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nb/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nl/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pl/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pt-rBR/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ru/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="16"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="15"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sw/strings.xml"
            line="16"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="17"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-uk/strings.xml"
            line="15"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-vi/strings.xml"
            line="15"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="16"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="17"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.wallet_old_sdk_dialog_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;wallet_old_sdk_dialog_title&quot;>Android version is out of date&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="55"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ar/strings.xml"
            line="45"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ca/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-cs/strings.xml"
            line="52"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-da/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-de/strings.xml"
            line="59"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-el/strings.xml"
            line="43"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-eo/strings.xml"
            line="45"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fi/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fr/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he/strings.xml"
            line="48"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hr/strings.xml"
            line="33"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hu/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id/strings.xml"
            line="45"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ja/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="53"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-mk/strings.xml"
            line="45"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nb/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nl/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pl/strings.xml"
            line="45"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pt-rBR/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ru/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="45"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="48"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="53"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="53"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sw/strings.xml"
            line="51"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-uk/strings.xml"
            line="48"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-vi/strings.xml"
            line="43"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="51"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="54"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.wallet_old_sdk_dialog_message` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;wallet_old_sdk_dialog_message&quot;>Chances are that one of the next releases of Bitcoin Wallet will not support your device any more. In some cases, it can get difficult to spend coins on this device.\n\nUnless you know what you are doing, it is recommended to move out your coins soon.&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="56"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ar/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ca/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-cs/strings.xml"
            line="53"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-da/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-de/strings.xml"
            line="60"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-eo/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fi/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fr/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he/strings.xml"
            line="49"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hu/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="47"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ja/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-mk/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nb/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nl/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pl/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pt-rBR/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ru/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="46"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="49"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="54"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sw/strings.xml"
            line="52"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="55"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-uk/strings.xml"
            line="49"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-vi/strings.xml"
            line="44"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="52"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="55"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.address_book_options_paste_from_clipboard_empty` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;address_book_options_paste_from_clipboard_empty&quot;>Clipboard is empty&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="141"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ar/strings.xml"
            line="91"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ca/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-cs/strings.xml"
            line="128"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-da/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-de/strings.xml"
            line="151"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-el/strings.xml"
            line="102"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-eo/strings.xml"
            line="77"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fi/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fr/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he/strings.xml"
            line="104"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hu/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id/strings.xml"
            line="77"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="93"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ja/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="139"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-mk/strings.xml"
            line="77"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nb/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nl/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pl/strings.xml"
            line="77"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pt-rBR/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ru/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="91"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="96"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="130"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="139"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sw/strings.xml"
            line="126"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-uk/strings.xml"
            line="107"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-vi/strings.xml"
            line="74"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="126"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="140"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.export_keys_dialog_button_export` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;export_keys_dialog_button_export&quot;>Back up&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="188"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ar/strings.xml"
            line="124"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ca/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-cs/strings.xml"
            line="169"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-da/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-de/strings.xml"
            line="203"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-el/strings.xml"
            line="137"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-eo/strings.xml"
            line="107"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fi/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fr/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he/strings.xml"
            line="140"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hu/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id/strings.xml"
            line="107"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="127"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ja/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="185"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-mk/strings.xml"
            line="107"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nb/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nl/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pl/strings.xml"
            line="107"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pt-rBR/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ru/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="124"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="131"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="174"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="186"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sw/strings.xml"
            line="166"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="187"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-uk/strings.xml"
            line="144"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-vi/strings.xml"
            line="102"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="167"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="186"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.time_today` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;time_today&quot;>today&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values/strings.xml"
            line="317"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ar/strings.xml"
            line="206"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ca/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-cs/strings.xml"
            line="275"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-da/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-de/strings.xml"
            line="341"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-el/strings.xml"
            line="237"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-eo/strings.xml"
            line="183"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-es/strings.xml"
            line="302"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fi/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-fr/strings.xml"
            line="304"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-he/strings.xml"
            line="225"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hr/strings.xml"
            line="82"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-hu/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-id/strings.xml"
            line="174"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-it/strings.xml"
            line="302"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-iw/strings.xml"
            line="209"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ja/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="299"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-mk/strings.xml"
            line="183"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nb/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-nl/strings.xml"
            line="304"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pl/strings.xml"
            line="183"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-pt-rBR/strings.xml"
            line="302"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ru/strings.xml"
            line="302"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="205"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="215"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sq/strings.xml"
            line="280"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sv/strings.xml"
            line="304"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sw/strings.xml"
            line="269"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-tr/strings.xml"
            line="305"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-uk/strings.xml"
            line="229"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-vi/strings.xml"
            line="167"
            column="10"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh/strings.xml"
            line="266"
            column="11"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="302"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.toast_frame` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/drawable-hdpi/toast_frame.9.png"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `FrameLayout` parent is useless; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="  &lt;LinearLayout"
        errorLine2="  ^"
        quickfix="adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout-land/request_coins_fragment.xml"
            line="30"
            column="3"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1=" &lt;LinearLayout"
        errorLine2=" ^"
        quickfix="adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/send_coins_buttons_include.xml"
            line="10"
            column="2"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `FrameLayout` parent is useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="   &lt;LinearLayout"
        errorLine2="   ^"
        quickfix="adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_onepane_horizontal.xml"
            line="29"
            column="4"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `FrameLayout` parent is useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="   &lt;LinearLayout"
        errorLine2="   ^"
        quickfix="adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_activity_twopanes.xml"
            line="33"
            column="4"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1=" &lt;string name=&quot;send_coins_fragment_request_payment_request_progress&quot;>Získavanie podpisu z %s...&lt;/string>"
        errorLine2="                                                                     ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sk/strings.xml"
            line="48"
            column="70"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;send_coins_fragment_request_payment_request_progress&quot;>전자 서명 불러오는 중... : %s&lt;/string>"
        errorLine2="                                                                      ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="56"
            column="71"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;send_coins_fragment_request_payment_request_progress&quot;>正在從 %s 讀取簽章...&lt;/string>"
        errorLine2="                                                                      ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="57"
            column="71"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;send_coins_fragment_state_decrypting&quot;>복호화중...&lt;/string>"
        errorLine2="                                                      ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="83"
            column="55"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;send_coins_preparation_msg&quot;>전자 서명 중...&lt;/string>"
        errorLine2="                                            ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="84"
            column="45"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;send_coins_sending_msg&quot;>보내는 중...&lt;/string>"
        errorLine2="                                        ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="85"
            column="41"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;raise_fee_dialog_state_decrypting&quot;>복호화중...&lt;/string>"
        errorLine2="                                                   ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="96"
            column="52"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;raise_fee_dialog_state_decrypting&quot;>正在解密中...&lt;/string>"
        errorLine2="                                                   ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="97"
            column="52"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_decrypt_progress&quot;>복호화중...\n2분 정도 소요됩니다.&lt;/string>"
        errorLine2="                                                        ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="109"
            column="57"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_request_wallet_balance_progress&quot;>금액 읽는 중...&lt;/string>"
        errorLine2="                                                                       ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="110"
            column="72"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;sweep_wallet_fragment_request_wallet_balance_progress&quot;>正在載入餘額...&lt;/string>"
        errorLine2="                                                                       ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="111"
            column="72"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;maintenance_dialog_state_decrypting&quot;>복호화중...&lt;/string>"
        errorLine2="                                                     ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="117"
            column="54"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;export_keys_dialog_mail_intent_chooser&quot;>Arhiviraj denarnico z...&lt;/string>"
        errorLine2="                                                        ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-sl/strings.xml"
            line="136"
            column="57"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;export_keys_dialog_mail_intent_chooser&quot;>用其他方式歸檔錢包...&lt;/string>"
        errorLine2="                                                        ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="192"
            column="57"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;encrypt_keys_dialog_state_encrypting&quot;>암호화중...&lt;/string>"
        errorLine2="                                                      ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="208"
            column="55"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;encrypt_keys_dialog_state_decrypting&quot;>복호화중...&lt;/string>"
        errorLine2="                                                      ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-ko/strings.xml"
            line="209"
            column="55"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="  &lt;string name=&quot;bitmap_fragment_share&quot;>分享...&lt;/string>"
        errorLine2="                                       ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/values-zh-rTW/strings.xml"
            line="251"
            column="40"/>
    </issue>

    <issue
        id="IconColors"
        severity="Warning"
        message="Notification icons must be entirely white"
        category="Usability:Icons"
        priority="6"
        summary="Icon colors do not follow the recommended visual style"
        explanation="Notification icons and Action Bar icons should only white and shades of gray. See the Android Design Guide for more details. Note that the way Lint decides whether an icon is an action bar icon or a notification icon is based on the filename prefix: `ic_menu_` for action bar icons, `ic_stat_` for notification icons etc. These correspond to the naming conventions documented in http://developer.android.com/guide/practices/ui_guidelines/icon_design.html"
        url="http://developer.android.com/design/style/iconography.html"
        urls="http://developer.android.com/design/style/iconography.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/drawable-hdpi/stat_notify_received.png"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: currency_symbol_btc.png, currency_symbol_mbtc.png, currency_symbol_ubtc.png, widget_preview.png"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xhdpi`: stat_sys_peers_0.png, stat_sys_peers_1.png, stat_sys_peers_2.png, stat_sys_peers_3.png, stat_sys_peers_4.png... (1 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/drawable-xhdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xxhdpi`: appwidget_dark_bg.9.png, appwidget_dark_bg_focused.9.png, appwidget_dark_bg_pressed.9.png, appwidget_inner_focused_c.9.png, appwidget_inner_focused_l.9.png... (15 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/drawable-xxhdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `res`: drawable-mdpi, drawable-xxxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res"/>
    </issue>

    <issue
        id="GoogleAppIndexingWarning"
        severity="Warning"
        message="Missing URL"
        category="Usability"
        priority="5"
        summary="Missing support for Google App Indexing"
        explanation="Adds URLs to get your app into the Google index, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="   &lt;intent-filter android:label=&quot;@string/send_coins_activity_title&quot; >"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/AndroidManifest.xml"
            line="107"
            column="4"/>
    </issue>

    <issue
        id="GoogleAppIndexingWarning"
        severity="Warning"
        message="Missing URL"
        category="Usability"
        priority="5"
        summary="Missing support for Google App Indexing"
        explanation="Adds URLs to get your app into the Google index, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="   &lt;intent-filter android:label=&quot;@string/import_keys_intent_filter_action&quot; >"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/AndroidManifest.xml"
            line="161"
            column="4"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;`ifRoom`&quot; instead of &quot;`always`&quot;"
        category="Usability"
        priority="3"
        summary="Usage of `showAsAction=always`"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="  android:showAsAction=&quot;always|withText&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/request_coins_fragment_options.xml"
            line="7"
            column="3"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/request_coins_fragment_options.xml"
            line="12"
            column="3"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;`ifRoom`&quot; instead of &quot;`always`&quot;"
        category="Usability"
        priority="3"
        summary="Usage of `showAsAction=always`"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="  android:showAsAction=&quot;always|withText&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/send_coins_fragment_options.xml"
            line="7"
            column="3"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;`ifRoom`&quot; instead of &quot;`always`&quot;"
        category="Usability"
        priority="3"
        summary="Usage of `showAsAction=always`"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="  android:showAsAction=&quot;always|withText&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/sending_addresses_fragment_options.xml"
            line="7"
            column="3"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/sending_addresses_fragment_options.xml"
            line="13"
            column="3"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;`ifRoom`&quot; instead of &quot;`always`&quot;"
        category="Usability"
        priority="3"
        summary="Usage of `showAsAction=always`"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="  android:showAsAction=&quot;always|withText&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/sweep_wallet_fragment_options.xml"
            line="7"
            column="3"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/sweep_wallet_fragment_options.xml"
            line="12"
            column="3"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;`ifRoom`&quot; instead of &quot;`always`&quot;"
        category="Usability"
        priority="3"
        summary="Usage of `showAsAction=always`"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="  android:showAsAction=&quot;always|withText&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/wallet_options.xml"
            line="7"
            column="3"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/wallet_options.xml"
            line="14"
            column="3"/>
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/menu/wallet_options.xml"
            line="21"
            column="3"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageView"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/bitmap_dialog.xml"
            line="8"
            column="2"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageButton"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row.xml"
            line="48"
            column="2"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageView"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/dialog_title.xml"
            line="12"
            column="2"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageView"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/extended_public_key_dialog.xml"
            line="7"
            column="2"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1=" &lt;ImageButton"
        errorLine2=" ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="167"
            column="2"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio,adt">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="37"
            column="4"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Number formatting does not take into account locale settings. Consider using `String.format` instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`
* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.
* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.
* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="  holder.heightView.setText(Integer.toString(height));"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/BlockListAdapter.java"
            line="150"
            column="29"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`
* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.
* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.
* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="   holder.protocolView.setText(&quot;protocol: &quot; + versionMessage.clientVersion);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/PeerListFragment.java"
            line="266"
            column="32"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`
* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.
* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.
* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="   holder.protocolView.setText(&quot;protocol: &quot; + versionMessage.clientVersion);"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/PeerListFragment.java"
            line="266"
            column="32"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`
* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.
* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.
* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="    payeeVerifiedByView.setText(Constants.CHAR_CHECKMARK"
        errorLine2="                                ^">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java"
            line="1319"
            column="33"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`
* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.
* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.
* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="    securityView.setText(encryptedStr + &quot;, &quot; + storageStr);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/WalletActivity.java"
            line="422"
            column="26"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="   android:paddingRight=&quot;8dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_fragment.xml"
            line="37"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`Gravity.END`&quot; instead of &quot;`Gravity.RIGHT`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  chooseViewParams.gravity = Gravity.RIGHT;"
        errorLine2="                                     ~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/src/de/schildbach/wallet/ui/CurrencyAmountView.java"
            line="122"
            column="38"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_gravity=&quot;right&quot;"
        errorLine2="                           ~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/address_book_row.xml"
            line="32"
            column="28"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot; />"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/address_book_row.xml"
            line="33"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:gravity=&quot;left&quot;"
        errorLine2="                    ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/bitmap_dialog.xml"
            line="30"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;top|right&quot;"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row.xml"
            line="53"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginRight=&quot;8dp&quot; />"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row_transaction.xml"
            line="15"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;left&quot;"
        errorLine2="                          ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row_transaction.xml"
            line="21"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:gravity=&quot;left&quot;"
        errorLine2="                   ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row_transaction.xml"
            line="23"
            column="20"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;right&quot;"
        errorLine2="                          ~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row_transaction.xml"
            line="30"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginLeft=&quot;8dp&quot; />"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/block_row_transaction.xml"
            line="31"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;6dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginRight=&quot;6dp&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/dialog_title.xml"
            line="17"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;@dimen/list_entry_padding_horizontal&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="33"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="43"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_gravity=&quot;right&quot;"
        errorLine2="                           ~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="52"
            column="28"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot; />"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="53"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginRight=&quot;@dimen/list_entry_padding_horizontal&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="66"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="76"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_gravity=&quot;right&quot;"
        errorLine2="                           ~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="86"
            column="28"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot; />"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/exchange_rate_row.xml"
            line="87"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_gravity=&quot;left&quot;"
        errorLine2="                           ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/request_coins_fragment.xml"
            line="34"
            column="28"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/request_coins_fragment.xml"
            line="51"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_gravity=&quot;left&quot;"
        errorLine2="                            ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/send_coins_fragment.xml"
            line="67"
            column="29"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/send_coins_fragment.xml"
            line="78"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="28"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="34"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="57"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="63"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;10dp&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="73"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_gravity=&quot;left|top&quot;"
        errorLine2="                            ~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="79"
            column="29"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_gravity=&quot;right|top&quot;"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="88"
            column="29"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginLeft=&quot;8dp&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="89"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="102"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_gravity=&quot;right|top&quot;"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="115"
            column="29"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginLeft=&quot;8dp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="116"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="131"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_gravity=&quot;right|top&quot;"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="138"
            column="29"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginLeft=&quot;8dp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="139"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginRight=&quot;8dp&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="153"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_gravity=&quot;left|top&quot;"
        errorLine2="                            ~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="159"
            column="29"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;top|right&quot;"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row.xml"
            line="172"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1=" android:gravity=&quot;left|center_vertical&quot;"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/transaction_row_warning.xml"
            line="8"
            column="19"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:drawableStart=&quot;@drawable/ic_send_flipped_white_24dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:drawableLeft=&quot;@drawable/ic_send_flipped_white_24dp&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_actions_fragment.xml"
            line="14"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:drawableEnd=&quot;@drawable/ic_send_white_24dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:drawableRight=&quot;@drawable/ic_send_white_24dp&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_actions_fragment.xml"
            line="32"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:gravity=&quot;left&quot;"
        errorLine2="                    ~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_address_dialog.xml"
            line="32"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;@dimen/list_entry_padding_horizontal&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;@dimen/list_entry_padding_horizontal&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_fragment.xml"
            line="25"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;@dimen/list_entry_padding_horizontal_cram&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginRight=&quot;@dimen/list_entry_padding_horizontal_cram&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_fragment.xml"
            line="26"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:paddingRight=&quot;8dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_fragment.xml"
            line="37"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;12dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginLeft=&quot;12dp&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="15"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:gravity=&quot;left|center_vertical&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="28"
            column="20"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;12dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;12dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="34"
            column="4"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;4sp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:layout_marginLeft=&quot;4sp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="47"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginStart=&quot;12dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   android:layout_marginLeft=&quot;12dp&quot;"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/lukas/woodcoin-wallet-dev/wallet/res/layout/wallet_balance_widget_content.xml"
            line="60"
            column="4"/>
    </issue>

</issues>
